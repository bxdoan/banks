[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-health-api"
version = "0.1.0"
description = "A simple FastAPI application with a health check endpoint"
requires-python = ">=3.13.2,<4.0"
license = {text = "MIT"}
dependencies = [
    "fastapi>=0.115.10",
    "uvicorn>=0.23.2",
    "pydantic>=2.10.6",
    "mbbank-lib>=0.2.2",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
dev-dependencies = [
    "pytest<9.0.0,>=8.3.4",
    "mypy<2.0.0,>=1.15.0",
    "ruff<1.0.0,>=0.9.9",
    "pre-commit<5.0.0,>=4.1.0",
    "types-passlib<2.0.0.0,>=1.7.7.20241221",
    "coverage<8.0.0,>=7.6.12",
    "setuptools>=75.8.2",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
